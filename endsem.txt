Assignment- 1
Write a Java program that accepts four integers from the user and prints equal if all four are equal, and not equal otherwise.
import java.util.Scanner;


public class EqualChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.println("Enter four integers:");
        int num1 = scanner.nextInt();
        int num2 = scanner.nextInt();
        int num3 = scanner.nextInt();
        int num4 = scanner.nextInt();
        
        if (num1 == num2 && num2 == num3 && num3 == num4) {
            System.out.println("Equal");
        } else {
            System.out.println("Not Equal");
        }
        
        scanner.close();
    }
}








Assignment- 2
Write a program to create a class Student2 along with two method getData (), printData () to get the value through argument and display the data in printData. Create the two objects s1, s2 to declare and access the values from class STtest


class Student2 {
    int rn;
    String name;
    double per;
    void getData(int r, String nm, double p) {
        rn = r;
        name = nm;
        per = p;
    }
    void putData() {
        System.out.println("Roll no = " + rn);
        System.out.println("Name = " + name);
        System.out.println("Per = " + per);
    }
}
public class SimpleClass {
    public static void main(String[] args) {
        Student2 s1 = new Student2();
        s1.getData(1, "Piyush", 72.70);
        s1.putData();


        Student2 s2;
        s2 = new Student2();
        s2.getData(2, "Shah", 85);
        s2.putData();
    }
}





Assignment- 3
Write a java program to create class car, truck and motorcycle which extends the vehicle class (attribute registration number, color, type of vehicle) with their own attribute like make, CC and fuel type. Input data from the user and print all the details.
import java.util.Scanner;


class Vehicle {
    String registrationNumber;
    String color;
    String typeOfVehicle;


    public Vehicle(String registrationNumber, String color, String typeOfVehicle) {
        this.registrationNumber = registrationNumber;
        this.color = color;
        this.typeOfVehicle = typeOfVehicle;
    }
}


class Car extends Vehicle {
    String make;
    int CC;
    String fuelType;


    public Car(String registrationNumber, String color, String typeOfVehicle, String make, int CC, String fuelType) {
        super(registrationNumber, color, typeOfVehicle);
        this.make = make;
        this.CC = CC;
        this.fuelType = fuelType;
    }
}


class Truck extends Vehicle {
    String make;
    int CC;
    String fuelType;


    public Truck(String registrationNumber, String color, String typeOfVehicle, String make, int CC, String fuelType) {
        super(registrationNumber, color, typeOfVehicle);
        this.make = make;
        this.CC = CC;
        this.fuelType = fuelType;
    }
}


class Motorcycle extends Vehicle {
    String make;
    int CC;
    String fuelType;


    public Motorcycle(String registrationNumber, String color, String typeOfVehicle, String make, int CC, String fuelType) {
        super(registrationNumber, color, typeOfVehicle);
        this.make = make;
        this.CC = CC;
        this.fuelType = fuelType;
    }
}


public class VehicleTest {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        System.out.println("Enter car details:");
        System.out.print("Registration Number: ");
        String carRegNum = scanner.nextLine();
        System.out.print("Color: ");
        String carColor = scanner.nextLine();
        System.out.print("Type of Vehicle: ");
        String carType = scanner.nextLine();
        System.out.print("Make: ");
        String carMake = scanner.nextLine();
        System.out.print("CC: ");
        int carCC = scanner.nextInt();
        scanner.nextLine(); // Consume newline character
        System.out.print("Fuel Type: ");
        String carFuelType = scanner.nextLine();


        Car car = new Car(carRegNum, carColor, carType, carMake, carCC, carFuelType);


        System.out.println("\nEnter truck details:");
        System.out.print("Registration Number: ");
        String truckRegNum = scanner.nextLine();
        System.out.print("Color: ");
        String truckColor = scanner.nextLine();
        System.out.print("Type of Vehicle: ");
        String truckType = scanner.nextLine();
        System.out.print("Make: ");
        String truckMake = scanner.nextLine();
        System.out.print("CC: ");
        int truckCC = scanner.nextInt();
        scanner.nextLine(); // Consume newline character
        System.out.print("Fuel Type: ");
        String truckFuelType = scanner.nextLine();


        Truck truck = new Truck(truckRegNum, truckColor, truckType, truckMake, truckCC, truckFuelType);


        System.out.println("\nEnter motorcycle details:");
        System.out.print("Registration Number: ");
        String motorcycleRegNum = scanner.nextLine();
        System.out.print("Color: ");
        String motorcycleColor = scanner.nextLine();
        System.out.print("Type of Vehicle: ");
        String motorcycleType = scanner.nextLine();
        System.out.print("Make: ");
        String motorcycleMake = scanner.nextLine();
        System.out.print("CC: ");
        int motorcycleCC = scanner.nextInt();
        scanner.nextLine(); // Consume newline character
        System.out.print("Fuel Type: ");
        String motorcycleFuelType = scanner.nextLine();


        Motorcycle motorcycle = new Motorcycle(motorcycleRegNum, motorcycleColor, motorcycleType, motorcycleMake, motorcycleCC, motorcycleFuelType);


        scanner.close();


        System.out.println("\nCar Details:");
        System.out.println("Registration Number: " + car.registrationNumber);
        System.out.println("Color: " + car.color);
        System.out.println("Type of Vehicle: " + car.typeOfVehicle);
        System.out.println("Make: " + car.make);
        System.out.println("CC: " + car.CC);
        System.out.println("Fuel Type: " + car.fuelType);


        System.out.println("\nTruck Details:");
        System.out.println("Registration Number: " + truck.registrationNumber);
        System.out.println("Color: " + truck.color);
        System.out.println("Type of Vehicle: " + truck.typeOfVehicle);
        System.out.println("Make: " + truck.make);
        System.out.println("CC: " + truck.CC);
        System.out.println("Fuel Type: " + truck.fuelType);


        System.out.println("\nMotorcycle Details:");
        System.out.println("Registration Number: " + motorcycle.registrationNumber);
        System.out.println("Color: " + motorcycle.color);
        System.out.println("Type of Vehicle: " + motorcycle.typeOfVehicle);
        System.out.println("Make: " + motorcycle.make);
        System.out.println("CC: " + motorcycle.CC);
        System.out.println("Fuel Type: " + motorcycle.fuelType);
    }
}

















Assignment- 4
Write a java program to create a class Student with data name, city and age along with method addData and printData to input and display the data. Create the two objects s1, s2 to declare and access the values
import java.util.Scanner;


class Student {
    String name;
    String city;
    int age;


    // Method to input data
    public void addData(String name, String city, int age) {
        this.name = name;
        this.city = city;
        this.age = age;
    }


    // Method to print data
    public void printData() {
        System.out.println("Name: " + name);
        System.out.println("City: " + city);
        System.out.println("Age: " + age);
    }
}


public class StudentTest {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);


        // Create first student object
        System.out.println("Enter details for student 1:");
        System.out.print("Name: ");
        String name1 = scanner.nextLine();
        System.out.print("City: ");
        String city1 = scanner.nextLine();
        System.out.print("Age: ");
        int age1 = scanner.nextInt();
        scanner.nextLine(); // Consume newline character


        Student s1 = new Student();
        s1.addData(name1, city1, age1);


        // Create second student object
        System.out.println("\nEnter details for student 2:");
        System.out.print("Name: ");
        String name2 = scanner.nextLine();
        System.out.print("City: ");
        String city2 = scanner.nextLine();
        System.out.print("Age: ");
        int age2 = scanner.nextInt();
        scanner.nextLine(); // Consume newline character


        Student s2 = new Student();
        s2.addData(name2, city2, age2);


        scanner.close();


        // Print details of both students
        System.out.println("\nDetails of student 1:");
        s1.printData();


        System.out.println("\nDetails of student 2:");
        s2.printData();
    }
}








Assignment- 5
Write a java program that implements a multi-thread application that has three threads. First thread generates a random integer every 1 second and if the value is even, the second thread computes the square of the number and prints. If the value is odd, the third thread will print the value of the cube of the number.
import java.util.Random;


class RandomNumberGenerator extends Thread {
    @Override
    public void run() {
        Random random = new Random();
        while (true) {
            int num = random.nextInt(100); // Generate a random integer between 0 and 99
            System.out.println("Generated number: " + num);
            if (num % 2 == 0) {
                synchronized (Main.lock) {
                    Main.evenNum = num;
                    Main.evenReady = true;
                    Main.lock.notifyAll();
                }
            } else {
                synchronized (Main.lock) {
                    Main.oddNum = num;
                    Main.oddReady = true;
                    Main.lock.notifyAll();
                }
            }
            try {
                Thread.sleep(1000); // Sleep for 1 second
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}


class SquareCalculator extends Thread {
    @Override
    public void run() {
        while (true) {
            synchronized (Main.lock) {
                while (!Main.evenReady) {
                    try {
                        Main.lock.wait();
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
                int num = Main.evenNum;
                System.out.println("Square of " + num + ": " + (num * num));
                Main.evenReady = false;
            }
        }
    }
}


class CubeCalculator extends Thread {
    @Override
    public void run() {
        while (true) {
            synchronized (Main.lock) {
                while (!Main.oddReady) {
                    try {
                        Main.lock.wait();
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
                int num = Main.oddNum;
                System.out.println("Cube of " + num + ": " + (num * num * num));
                Main.oddReady = false;
            }
        }
    }
}


public class Main {
    static final Object lock = new Object();
    static volatile boolean evenReady = false;
    static volatile boolean oddReady = false;
    static volatile int evenNum;
    static volatile int oddNum;


    public static void main(String[] args) {
        RandomNumberGenerator randomNumberGenerator = new RandomNumberGenerator();
        SquareCalculator squareCalculator = new SquareCalculator();
        CubeCalculator cubeCalculator = new CubeCalculator();
        randomNumberGenerator.start();
        squareCalculator.start();
        cubeCalculator.start();
    }
}


















































Assignment- 6
Write a java program to create an abstract class named Shape that contains two integers and an empty method named print Area (). Provide three classes named Rectangle, Triangle and Circle such that each one of the classes extends the class Shape. Each one of the classes contains only the method print Area () that prints the area of the given shape

abstract class Shape {
    protected int dimension1;
    protected int dimension2;


    public Shape(int dimension1, int dimension2) {
        this.dimension1 = dimension1;
        this.dimension2 = dimension2;
    }


    // Abstract method to print area
    public abstract void printArea();
}


class Rectangle extends Shape {
    public Rectangle(int length, int width) {
        super(length, width);
    }


    @Override
    public void printArea() {
        int area = dimension1 * dimension2;
        System.out.println("Area of Rectangle: " + area);
    }
}


class Triangle extends Shape {
    public Triangle(int base, int height) {
        super(base, height);
    }


    @Override
    public void printArea() {
        double area = 0.5 * dimension1 * dimension2;
        System.out.println("Area of Triangle: " + area);
    }
}


class Circle extends Shape {
    public Circle(int radius) {
        super(radius, radius);
    }


    @Override
    public void printArea() {
        double area = Math.PI * dimension1 * dimension1;
        System.out.println("Area of Circle: " + area);
    }
}


public class Main {
    public static void main(String[] args) {
        Rectangle rectangle = new Rectangle(5, 10);
        Triangle triangle = new Triangle(6, 8);
        Circle circle = new Circle(4);


        rectangle.printArea();
        triangle.printArea();
        circle.printArea();
    }
}









Assignment- 7
Write a java program to create a calculator which performs addition, subtraction and multiplication of numbers for different types like integer, float and complex numbers using single function add(),sub() and multi().
class Calculator {
    // Addition method for integers
    public int add(int a, int b) {
        return a + b;
    }


    // Addition method for floats
    public float add(float a, float b) {
        return a + b;
    }


    // Addition method for complex numbers
    public ComplexNumber add(ComplexNumber a, ComplexNumber b) {
        return new ComplexNumber(a.getReal() + b.getReal(), a.getImaginary() + b.getImaginary());
    }


    // Subtraction method for integers
    public int sub(int a, int b) {
        return a - b;
    }


    // Subtraction method for floats
    public float sub(float a, float b) {
        return a - b;
    }


    // Subtraction method for complex numbers
    public ComplexNumber sub(ComplexNumber a, ComplexNumber b) {
        return new ComplexNumber(a.getReal() - b.getReal(), a.getImaginary() - b.getImaginary());
    }


    // Multiplication method for integers
    public int multi(int a, int b) {
        return a * b;
    }


    // Multiplication method for floats
    public float multi(float a, float b) {
        return a * b;
    }


    // Multiplication method for complex numbers
    public ComplexNumber multi(ComplexNumber a, ComplexNumber b) {
        // (a + bi) * (c + di) = (ac - bd) + (ad + bc)i
        int realPart = a.getReal() * b.getReal() - a.getImaginary() * b.getImaginary();
        int imaginaryPart = a.getReal() * b.getImaginary() + a.getImaginary() * b.getReal();
        return new ComplexNumber(realPart, imaginaryPart);
    }
}


class ComplexNumber {
    private int real;
    private int imaginary;


    public ComplexNumber(int real, int imaginary) {
        this.real = real;
        this.imaginary = imaginary;
    }


    public int getReal() {
        return real;
    }


    public int getImaginary() {
        return imaginary;
    }


    @Override
    public String toString() {
        return real + " + " + imaginary + "i";
    }
}


public class Main {
    public static void main(String[] args) {
        Calculator calculator = new Calculator();


        // Integer addition
        System.out.println("Integer Addition: " + calculator.add(5, 3));
        // Float addition
        System.out.println("Float Addition: " + calculator.add(3.5f, 2.7f));
        // Complex number addition
        ComplexNumber complex1 = new ComplexNumber(2, 3);
        ComplexNumber complex2 = new ComplexNumber(1, -4);
        System.out.println("Complex Addition: " + calculator.add(complex1, complex2));


        // Integer subtraction
        System.out.println("Integer Subtraction: " + calculator.sub(8, 3));
        // Float subtraction
        System.out.println("Float Subtraction: " + calculator.sub(5.5f, 2.7f));
        // Complex number subtraction
        System.out.println("Complex Subtraction: " + calculator.sub(complex1, complex2));


        // Integer multiplication
        System.out.println("Integer Multiplication: " + calculator.multi(5, 4));
        // Float multiplication
        System.out.println("Float Multiplication: " + calculator.multi(3.5f, 2.7f));
        // Complex number multiplication
        System.out.println("Complex Multiplication: " + calculator.multi(complex1, complex2));
    }
}
















































































































Assignment- 8
Create simple application of Java AWT in which show an awt component button by setting its placement and window frame size..

package college;
import java.awt.Button;
import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;


public class College {


    public static void main(String[] args) {
        Frame frame = new Frame("AWT Example");
        Button button = new Button("Click Me");
        frame.setSize(300, 200);
        frame.setLayout(null);
        button.setBounds(100, 80, 100, 40); // (x, y, width, height)
        frame.add(button);
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                System.exit(0);
            }
        });


        frame.setVisible(true);
    }
    
}




